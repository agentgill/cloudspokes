<!-- 
        Asset hierarchy tree view related list page.
 -->
<apex:page standardController="Account" extensions="AssetHierarchicalRelatedListCtr" sidebar="false" showHeader="false"  >

<html>
<head>
    <meta charset="UTF-8" />
    <title>Asset View</title>
    
    <apex:stylesheet value="{!URLFOR($Resource.treeviewGrid2983, 'css/easyui.css')}"/>
    
    <apex:includeScript value="{!URLFOR($Resource.treeviewGrid2983, 'jquery.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.treeviewGrid2983, 'jquery.easyui.min.js')}" />
</head>

<body>
<apex:pageMessages id="errorsMsg" />
<apex:form >

        <div style="margin:10px 0;"></div>
        <table id="assertTreeGrid" class="easyui-treegrid" title="Asset Hierarchy" width="100%" style="height:500px"
                        data-options="
                                rownumbers: false,
                                animate: true,
                                collapsible: true,
                                fitColumns: true,
                                idField: 'id',
                                treeField: 'name',
                                loadFilter: pagerFilter,
                                pagination: true,
                                pageSize: 5,
                                pageList: [5,10,20,50,100]
                        ">
                <thead>
                        <tr>
                                <!--  Need to map the field name with header here -->
                                <th data-options="field:'name',width:180">Asset Name</th>
                                <th data-options="field:'serialNumber',width:60">Serial Number</th>
                                <th data-options="field:'installDate',width:50">Install Date</th>
                                <th data-options="field:'Quantity',width:30">Quantity</th>
                                <th data-options="field:'contactName',width:60">Contact Name</th>
                                <th data-options="field:'Status',width:50">Status</th>
                                <th data-options="field:'isCompetitorAsset',width:50,formatter:formatCheckBox">Competitor Asset</th>
                        </tr>
                </thead>
        </table>
        
        <script type="text/javascript">
                // Variable holding current account record id.
                var accountId = '{!selectedAccountId}';
                
                /*
            Method load the tree data using the JS remoting method call. 
        */
        function loadAssetTreeGridData() {
        
                // making js remoting call.
                 Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.AssetHierarchicalRelatedListCtr.getAssetHierarchyData}', accountId, function(result, event) {
                    if (event.status) {
                        $('#assertTreeGrid').treegrid({  
                            data: result
                        }); 
                    } else if (event.type === 'exception') {    
                         alert(event.message);
                    } else {
                       alert(event.message);
                    }
                }, {escape:true});
        }
        
        // Making initial data load call for tree view creating.
        loadAssetTreeGridData();
                
                // Method for formate checkbox for the boolean value returned as remote action call.
                function formatCheckBox(value){
                if (value){
                        var s = '<input type="checkbox" checked="true" disabled="true" />';
                        return s;
                } else {
                        return '<input type="checkbox" disabled="true" />';
                }
                }
                
                function pagerFilter(data){
            if ($.isArray(data)){    // is array  
                data = {  
                    total: data.length,  
                    rows: data  
                }  
            }
            var dg = $(this);  
                        var state = dg.data('treegrid');
            var opts = dg.treegrid('options');  
            var pager = dg.treegrid('getPager');  
            pager.pagination({  
                onSelectPage:function(pageNum, pageSize){  
                    opts.pageNumber = pageNum;  
                    opts.pageSize = pageSize;  
                    pager.pagination('refresh',{  
                        pageNumber:pageNum,  
                        pageSize:pageSize  
                    });  
                    dg.treegrid('loadData',data);  
                }  
            });  
            if (!data.topRows){  
                data.topRows = [];
                data.childRows = [];
                for(var i=0; i<data.rows.length; i++){
                        var row = data.rows[i];
                        row._parentId ? data.childRows.push(row) : data.topRows.push(row);
                }
                                data.total = (data.topRows.length);
            }  
            var start = (opts.pageNumber-1)*parseInt(opts.pageSize);  
            var end = start + parseInt(opts.pageSize);  
                        data.rows = $.extend(true,[],data.topRows.slice(start, end).concat(data.childRows));
                        return data;
                }
        </script>
 
</apex:form>
</body>
</html>
</apex:page>